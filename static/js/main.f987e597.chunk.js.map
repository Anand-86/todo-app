{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/Layout/Header.js","components/AddTodo.js","components/Pages/About.js","App.js","index.js"],"names":["TodoItem","getStyle","fontWeight","background","padding","border","color","textDecoration","props","todo","completed","this","id","title","style","type","onChange","markComplete","bind","display","onClick","delTodo","btnStyle","Component","margin","borderRadius","cursor","float","Todos","todos","map","key","headerStyle","textAlign","linkStyle","Header","to","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","flex","placeholder","className","About","App","axios","delete","then","res","filter","post","data","get","exact","path","render","Fragment","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f987e597.chunk.js","sourcesContent":["import React, { Component } from 'react';   \r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      fontWeight: 'bold',   \r\n      background: '#37A6B0',\r\n      padding: '10px',\r\n      border: '1px #0F6168 solid',\r\n      color: '#02323B',\r\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'  \r\n    }\r\n  };\r\n\r\n\r\n  \r\n  render()  {\r\n    const { id, title } = this.props.todo;\r\n      return  (\r\n        <div style={ this.getStyle() }>\r\n            <input type=\"checkbox\" onChange={ this.props.markComplete.bind(this, id) }/> {' '}\r\n            <p style={{ display: 'inline' }}>{ title }</p>\r\n            <button onClick={ this.props.delTodo.bind(this, id) } style={ btnStyle }>Delete</button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nconst btnStyle = {\r\nbackground: '#5AB9C2',\r\ncolor: '#02323B',\r\nborder:'2px solid',\r\npadding: '5px 10px',\r\nmargin: '',\r\nborderRadius: '10%',\r\ncursor: 'pointer',\r\nfloat: 'right'\r\n\r\n};\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';   // { Component } is used here so we don't have to use React.Component\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Todos extends Component {\r\n  render()  {\r\n    return this.props.todos.map((todo) => (\r\n        <TodoItem key={ todo.id } todo={ todo } markComplete={this.props.markComplete} delTodo={ this.props.delTodo }/>\r\n  ));\r\n\r\n  }\r\n}\r\n\r\n// PropTypes\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Todos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Todo List</h1>\r\n            <Link style={linkStyle} to='/'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#144145',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none' \r\n}\r\n\r\nexport default Header;\r\n\r\n// Functional component that doesn't doe anything and is going to stay there even when everything else is delted so\r\n// It should be a separate component because it's just for display and it is for this page aloneto remain there even\r\n// though other stuff is going on.\r\n// http request 01:26:00. You could use fetch api but we use axios here.\r\n// fetch the todos \r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass AddTodo extends Component {\r\n    state =  {\r\n        title: ''\r\n    }\r\n\r\nonChange = (e) => this.setState({ [ e.target.name ]: e.target.value });  \r\n\r\nonSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: ''});\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <input type=\"text\" name=\"title\" style={{ flex: '10', padding: '5px' }} placeholder=\"Add Todo ...\" value={ this.state.title } onChange={ this.onChange }/>\r\n                <input type=\"submit\" name=\"Submit\" style={{ flex: '1' }} className=\"btn\"/>\r\n            </form>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired,\r\n  }\r\n\r\n\r\n\r\nexport default AddTodo;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n\r\n// How do we decide when to use React router? We don't want to display this about page on the main page. So this is where we use React Router.","import React, { Component } from 'react';   // { Component } is used here so we don't have to use React.Component\nimport { BrowserRouter as Router, Route } from 'react-router-dom';   //React Router.\nimport './App.css';\nimport Todos from './components/Todos';\nimport Header from './components/Layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/Pages/About';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: [\n    \n    ]\n  }\n \n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')   \n      .then(res => this.setState({ todos: res.data}))\n  };\n\n\n\n \n\n\n// Toggle complete function: markComplete.\nmarkComplete = (id) => {   \n  this.setState({ todos: this.state.todos.map(todo => {\n    if(todo.id === id) {\n      todo.completed = !todo.completed\n    }\n    return todo;\n  }) });\n\n}\n\n// Delete Todo\ndelTodo = (id) => {\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)    // delete request.\n  .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] })\n    );\n  \n  }\n\n// Add Todo\naddTodo = (title) => {\n  axios.post('https://jsonplaceholder.typicode.com/todos', {    \n    title,\n    completed: false\n  })  \n  .then(res => this.setState({ todos: [...this.state.todos, res.data] })\n  );    \n}    \n  \n\n\nrender()  {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n        <Header />\n        <Route exact path=\"/\" render={props => (\n          <React.Fragment>\n            <AddTodo addTodo={ this.addTodo }/>\n            <Todos todos={ this.state.todos } markComplete={ this.markComplete } delTodo={ this.delTodo }/>\n          </React.Fragment>\n        )}/>\n\n        <Route path=\"/about\" component={About}/>\n\n        </div>\n      </div>\n    </Router>   \n  )}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// This is a React Crash Course 2019 by Brad Traversy.\n"],"sourceRoot":""}